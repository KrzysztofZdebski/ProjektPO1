@startuml

' Class Diagram
class MainWindowController {
  + ComboBox<Category> categoryBox
  + TableView<Event> eventsTable
  + ObservableList<Category> categories
  + ObservableList<Event> events
  + ObservableList<String> clients
  + String selectedClient
  --
  + void initialize()
  + void handlePlaceBet()
  + void handleClearSelection()
  + void handleAddClient()
  + void handleRemoveClient()
  + void handleNewEvent()
  + void handleRemoveEvent()
  + void handleNewCategory()
  + void showAlert(String title, String content)
  + void update()
  + void addEvent(Event event)
  + void addBet(Event event, int bet, String team)
}

class NewBetWindowController {
  + ComboBox<String> teamBox
  + TextField betAmountTextField
  + MainWindowController mainWindowController
  + Event selectedEvent
  + String selectedClient
  --
  + void handleNewBet()
  + void cancel()
  + void setMainWindowController(MainWindowController controller)
  + void setSelectedEvent(Event event)
  + void setSelectedClient(String client)
}

class NewEventWindowController {
  + TextField eventNameTextField
  + TextField fisrtTeamTextField
  + TextField secondTeamTextField
  + DatePicker datePicker
  + MainWindowController mainWindowController
  --
  + void cancel()
  + void createEvent()
  + void setParentController(MainWindowController controller)
}

class Event {
  + StringProperty eventName
  + StringProperty eventDate
  + ObservableList<String> participants
  + ObservableList<Integer> bet
  + ObservableList<Double> odds
  + List<Listener> listeners
  - final double maxOdds
  - final double ownerMargin
  --
  + void addBet(String participant, int bet)
  + void addListener(Listener listener)
  + void removeListener(Listener listener)
  + StringProperty eventNameProperty()
}

class Category {
  + ObservableList<Event> events
  + String categoryName
  --
  + boolean equals(String str)
  + String getCategoryName()
  + ObservableList<Event> getEvents()
}

MainWindowController --> NewBetWindowController : uses
MainWindowController --> NewEventWindowController : uses
MainWindowController --> Event : manages
MainWindowController --> Category : manages
NewBetWindowController --> Event : updates
NewEventWindowController --> Event : creates
Category --> Event : contains

@enduml