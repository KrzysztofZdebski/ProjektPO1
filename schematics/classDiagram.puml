@startuml

' Class Diagram
class MainWindowController {
  + ComboBox<Category> categoryBox
  + TableView<Event> eventsTable
  + ObservableList<Category> categories
  + ObservableList<Event> events
  + ObservableList<String> clients
  + String selectedClient
  --
  +  initialize()
  +  handlePlaceBet()
  +  handleClearSelection()
  +  handleAddClient()
  +  handleRemoveClient()
  +  handleNewEvent()
  +  handleRemoveEvent()
  +  handleNewCategory()
  +  showAlert(String title, String content)
  +  update()
  +  addEvent(Event event)
  +  addBet(Event event, int bet, String team)
}

class NewBetWindowController {
  + ComboBox<String> teamBox
  + TextField betAmountTextField
  + MainWindowController parentController
  + Event selectedEvent
  + String selectedClient
  --
  +  handleNewBet()
  +  cancel()
  +  setMainWindowController(MainWindowController controller)
  +  setSelectedEvent(Event event)
  +  setSelectedClient(String client)
}

class NewEventWindowController {
  + TextField eventNameTextField
  + TextField fisrtTeamTextField
  + TextField secondTeamTextField
  + DatePicker datePicker
  + MainWindowController parentController
  --
  +  cancel()
  +  createEvent()
  +  setParentController(MainWindowController controller)
}

class Event {
  + StringProperty eventName
  + StringProperty eventDate
  + ObservableList<String> participants
  + ObservableList<Integer> bet
  + ObservableList<Double> odds
  + List<Listener> listeners
  - final double maxOdds
  - final double ownerMargin
  --
  +  addBet(String participant, int bet)
  +  addListener(Listener listener)
  +  removeListener(Listener listener)
  + StringProperty eventNameProperty()
}

class Category {
  + ObservableList<Event> events
  + String categoryName
  --
  +  equals(String str)
  +  getCategoryName()
  +  getEvents()
}

MainWindowController --> NewBetWindowController : uses
MainWindowController --> NewEventWindowController : uses
MainWindowController --> Event : manages
MainWindowController --> Category : manages
NewBetWindowController --> Event : updates
NewEventWindowController --> Event : creates
Category --> Event : contains

@enduml